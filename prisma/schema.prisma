generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum Role {
  USER
  ADMIN
  SELLER
}

model User {
  id      String @id @default(uuid())
  name    String
  email   String @unique
  picture String @db.Text
  role    Role   @default(USER)

  stores Store[] @relation("UserStores")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id       String  @id @default(uuid())
  name     String
  image    String
  url      String  @unique
  featured Boolean @default(false)

  subCategories SubCategory[] @relation("CategoryToSubcategory")

  products Product[] @relation("CategoryToProduct")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SubCategory {
  id       String  @id @default(uuid())
  name     String
  image    String
  url      String  @unique
  featured Boolean @default(false)

  categoryId String
  category   Category @relation("CategoryToSubcategory", fields: [categoryId], references: [id])

  products Product[] @relation("SubCategoryToProduct")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
}

enum StoreStatus {
  PENDING
  ACTIVE
  BANNED
  DISABLED
}

model Store {
  id                                  String      @id @default(uuid())
  name                                String
  description                         String      @db.Text
  email                               String      @unique
  phone                               String
  url                                 String      @unique
  logo                                String
  cover                               String
  status                              StoreStatus @default(PENDING)
  averageRating                       Float       @default(0)
  numReviews                          Int         @default(0)
  featured                            Boolean     @default(false)
  returnPolicy                        String      @default("Return in 30 days.")
  defaultShippingService              String      @default("International Delivery")
  defaultShippingFeePerItem           Float       @default(0)
  defaultShippingFeeForAdditionalItem Float       @default(0)
  defaultShippingFeePerKg             Float       @default(0)
  defaultShippingFeeFixed             Float       @default(0)
  defaultDeliveryTimeMin              Int         @default(7)
  defaultDeliveryTimeMax              Int         @default(31)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  userId String
  user   User   @relation("UserStores", fields: [userId], references: [id])

  products      Product[]      @relation("StoreToProduct")

  @@index([userId])
}

model Product {
  id                String            @id @default(uuid())
  name              String
  description       String            @db.LongText
  slug              String            @unique
  brand             String
  rating            Float             @default(0)
  sales             Int               @default(0)
  numReviews        Int               @default(0)
  shippingFeeMethod ShippingFeeMethod @default(ITEM)
  views  Int @default(0)
  freeShipping FreeShipping? @relation("ProductFreeShipping")
  freeShippingForAllCountries Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  storeId String
  store   Store  @relation("StoreToProduct", fields: [storeId], references: [id])

  variants  ProductVariant[] @relation("ProductToProductVariant")
  specs     Spec[]           @relation("ProductSpec")
  questions Question[]       @relation("ProductQuestion")
  reviews   Review[]         @relation("ReviewToProduct")
  wishlist  Wishlist[]       @relation("WishlistToProduct")

  categoryId String
  category   Category @relation("CategoryToProduct", fields: [categoryId], references: [id])

  subCategoryId String
  subCategory   SubCategory @relation("SubCategoryToProduct", fields: [subCategoryId], references: [id])

  @@index([storeId])
  @@index([categoryId])
  @@index([subCategoryId])
}